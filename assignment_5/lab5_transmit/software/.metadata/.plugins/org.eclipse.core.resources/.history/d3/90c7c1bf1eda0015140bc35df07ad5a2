#include "sys/alt_stdio.h"
#include "drivers/inc/altera_avalon_pio_regs.h"
#include "fcntl.h"
#include "unistd.h"
#define BUFFER_SIZE 50

#define transmit_enable (volatile char *) 0x00005000
#define character_sent (volatile char *) 0x00005010
#define data_bus_output (volatile char *) 0x00005030
#define load (volatile char *) 0x00005020
#define data_bus_input (volatile char *) 0x00005060
#define character_received (volatile char *) 0x00005050
#define data_bus_LEDs (volatile char *) 0x00005040


char readBuffer(char** pTransmit, char* pBufferHead, char* pBuffer) {
    //printf("%c %c %i\n", **pTransmit, 0xC8, **pTransmit == 0xC8);
    if(**pTransmit == 0x60 || **pTransmit == '\0') {
        return '\0';
    } else {
        char c = **pTransmit;
        **pTransmit = 0x60;

        if((*pTransmit - pBuffer) == (BUFFER_SIZE - 1)) {
            *pTransmit = pBuffer;
        } else {
            *pTransmit = *pTransmit + sizeof(char);
        }
        return c;
    }
}

void writeBuffer(char c, char** pBufferHead, char** pBuffer) {
    if(!(**pBufferHead == 0x60 || **pBufferHead == '\0')) return;

    *(*pBufferHead) = c;
    if((*pBufferHead - *pBuffer) == (BUFFER_SIZE - 1)) {
        *pBufferHead = *pBuffer;
    } else {
        *pBufferHead = *pBufferHead + sizeof(char);
    }
}


int main()
{
	fcntl(STDIN_FILENO, F_SETFL, O_NONBLOCK);

	alt_putstr("EE 371 Lab 4 - Adding Communication\n");
	int read = 1;
	int write = 1;

	char* pBuffer = calloc(BUFFER_SIZE, sizeof(char));
	char* pBufferHead = pBuffer;
	char* pTransmit = pBuffer;



	*load = 0;
	*transmit_enable = 0;
	*data_bus_output = 0x00;
	*data_bus_LEDs = 0x00;

  /* Event loop never exits. */
  while (1) {
	  //*******read keyboard and put characters in buffer********
	  char newC = alt_getchar();
	  if(newC > 31 && newC < 128) {
		  writeBuffer(newC, &pBufferHead, &pBuffer);
	  }

	  //Output what is in the buffer to the leds
	  /*char c = readBuffer(&pTransmit, pBufferHead, pBuffer);
	  if(c != '\0' && c != 0x60) {
		  *data_bus_LEDs = c;
	  }*/

	  //******transmit*******
	  if(*load) {
		  *load = 0;
	  }

	  char c = '\0';
	  if(write) {
		  c = readBuffer(&pTransmit, pBufferHead, pBuffer);
		  if(c != '\0' && c != 0x60 ) {
			  write = 0;
			  //*data_bus_output = ((c << 2)>> 1)|0b0000000001;
			  //*data_bus_output = 0b0010011111;
			  *data_bus_output = 0b0111100101;
			  *transmit_enable = 1;
			  *load = 1;
			  alt_putchar(c);
			  *data_bus_LEDs = (*load) | (*transmit_enable << 1) | (*character_sent << 2) | (*character_received << 3);
			  usleep(118200);
		  }
	  }
	  if(*character_sent) {
		  write = 1;
		  *transmit_enable = 0;
	  }

	  //*****receive*********
	  if(*character_received & read) {
		  read = 0;
		  int parity = *data_bus_input & 0x01;
		  char cRec = (*data_bus_input >> 1) & 0b0011111111;
		  alt_putstr("\ngot char! (");
		  alt_putchar(*data_bus_input);
		  alt_putstr(")\n");
	  } else if(!(*character_received)) {
		  read = 1;
	  }


	  //******Debug outputs
	  *data_bus_LEDs = (*load) | (*transmit_enable << 1) | (*character_sent << 2) | (*character_received << 3);
	  //*data_bus_LEDs = *data_bus_output >> 2;
  }

  return 0;
}
